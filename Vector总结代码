/*这些代码是我经过归纳vector的一些属性后作出的总结 以后如果用到需要vector的地方能在这找到并尽快回想起用法
*/
#include<iostream>
//头文件 vector
#include<vector>
//头文件 algorithm 用于实现排序
#include<algorithm>

//通过函数对vector进行改动操作需要加上& 如 (vector<int>& a)

//引用自:https://blog.csdn.net/weixin_43350051/article/details/97945841
bool cmp(int x, int y) ///cmp函数传参的类型不是vector<int>型，是vector中元素类型,即int型
{
	return x > y;
}

using namespace std;
int main()
{
	//定义vector
	vector<int> a;
	for (int i = 0; i < 10; i++)
	{
		a.push_back(-i * 10);

	}
	a[9] = 1;

	//遍历1
	//a.size :a矢量的元素个数
	cout << "原容器:" << endl;
	for (int i = 0; i < a.size(); i++)
	{
		cout << a[i] << "\t";
	}
	//遍历2
	//for (it = a.begin(); it != a.end(); it++)
	//	cout << *it << endl;


	//排序 从小到大
	//头文件 algorithm
	cout << endl<<"排序后:"<<endl;
	//加上cmp函数 为从大到小排序
	sort(a.begin(), a.end()/*, cmp*/);


	//sort(a.end(), a.begin()); 想用此实现从小到大 但不能实现 会出现错误
	for (int i = 0; i < a.size(); i++)
	{
		cout << a[i] << "\t";
	}
	return 0;
}


//下面是上面代码没有涉及的小点，之后又学到了，现在回来做补充 //引自:https://blog.csdn.net/weixin_41743247/article/details/90635931?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522161861952416780274149804%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&request_id=161861952416780274149804&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_positive~default-1-90635931.first_rank_v2_pc_rank_v29&utm_term=vector
/*
//返回a的最后一个元素
a.back();

//返回a的第一个元素
a.front();

//将a的现有元素个数调整至10个，多则删，少则补，补值补0(可能不为0)；
a.resize(10);

//将a的现有元素个数调整至10个，多则删，少则补，补值为2
a.resize(10,2);

//在a的第一个元素（从第0个算起）位置插入数值5,
a.insert(a.begin()+1,5);

//在a的第一个元素（从第0个算起）位置插入3个数，其值都为5
a.insert(a.begin()+1,3,5);

 //对a中的从a.begin()（包括它）到a.end()（不包括它）的元素倒置，但不排列，如a中元素为1,3,2,4,倒置后为4,2,3,1
 reverse(a.begin(),a.end());
 
 //在a中的从a.begin()（包括它）到a.end()（不包括它）的元素中查找10，若存在返回其在向量中的位置
  find(a.begin(),a.end(),10);

*/


